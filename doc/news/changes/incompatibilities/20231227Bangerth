Changed: We have always considered PETSc- and Trilinos-based vectors
that have ghost elements as immutable, i.e., it is possible to read
elements (including the ghost elements) but not to write into them. On
the other hand, the `compress()` function available in all vector
types is meant to communicate values written into non-locally-owned
vector elements to their proper owners, for example during assembly of
a right hand side vector. This `compress()` operation clearly only
makes sense if a vector does not have ghost elements, because only
then is it possible to write into the vector at all, but this
restriction was not enforced -- the `compress()` function simply did
not do anything at all in these cases. This has now changed: Because
it does not make sense to call `compress()` on vectors that have ghost
elements, it is now forbidden to call it and this case will be caught
by an assertion.
<br>
(Wolfgang Bangerth, 2023/12/27)
